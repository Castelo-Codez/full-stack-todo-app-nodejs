import{$removeError,$setError}from"./globalfuntions.js";const form=document.querySelector("form");null==form||form.addEventListener("submit",async e=>{e.preventDefault();let $credetialsHasError={username:form.username.value.length<5?{error:!0,type:"username",message:"must be at least 5 characters"}:/\W/gi.test(form.username.value)?{error:!0,type:"username",message:"username can't include special characters"}:{error:!1,type:"username"},email:validator.isEmail(form.email.value)?{error:!1,type:"email"}:{error:!0,type:"email",message:"please enter a valid email"},password:form.password.value.length<8?{error:!0,type:"password",message:"must be at least 8 characters"}:form.password.value.length>=8?{error:!1,type:"password"}:{error:!0,type:"password",message:"can't be empty"}};for(let[key,value]of Object.entries($credetialsHasError))"string"!=typeof value&&value.error&&$setError(value),"string"==typeof value||value.error||$removeError(value);"string"==typeof $credetialsHasError.email||$credetialsHasError.email.error||"string"==typeof $credetialsHasError.password||$credetialsHasError.password.error||"string"==typeof $credetialsHasError.username||$credetialsHasError.username.error||axios.post("/signup",{username:form.username.value,email:form.email.value,password:form.password.value}).then(res=>{res.data.error&&$setError({error:!0,type:"email",message:"this email already exist"}),axios.post("/login",{email:res.data.email,password:res.data.password}).then(res=>{window.location.assign("/")})})});